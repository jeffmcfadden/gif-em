!!!
%html
  %head
    %meta{:charset => "utf-8"}/
    %title=content_for?(:page_title) ? "#{content_for(:page_title)} â€” Gif Manager" : "Gif Manager"

    = stylesheet_link_tag    "application", :media => "all", data: { turbolinks_track: true }
    = javascript_include_tag "application", data: { turbolinks_track: true }

    %meta{:content => "width=device-width, initial-scale=1.0", :name => "viewport"}/

    = csrf_meta_tags

    :javascript
      Turbolinks.enableTransitionCache();
    %link{:href => "//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css", :rel => "stylesheet"}/
  %body.body{ class: content_for?(:body_class) ? content_for(:body_class) : "" }

    %nav.navbar.navbar-default
      .container-fluid
        %ul.nav.navbar-nav
          %li= link_to "Home", root_path
          - @untagged_image = Image.untagged.last
          - if @untagged_image.present?
            %li= link_to "Untagged Queue", image_path(@untagged_image, untagged: true)
          
          %li= link_to "All Tags", tag_cloud_images_path
          %li= link_to "All Images", all_images_path
          
        .navbar-form.navbar-right
          = simple_form_for Image.new, html: { class: 'form-horizontal' } do |f|
            .text-center
              = f.anaconda :asset, auto_upload: true, auto_submit: true

        .navbar-form.navbar-right
          = form_tag create_from_url_images_path, method: :post, class: "form-inline" do
            .form-group
              = text_field_tag 'image_url', nil, class: "form-control", placeholder: "http://"
              = submit_tag "Add From URL", class: "btn btn-default"

        .navbar-form.navbar-right
          = form_tag '/', method: :get, class: "form-inline" do
            .form-group
              = text_field_tag 'q', params[:q], class: "form-control", placeholder: "Search"
              = submit_tag "Search", class: "btn btn-primary"

    .container-fluid
      .row
        .col-lg-12.col-md-12
          - if flash[:notice].present?
            .alert.alert-warning
              = flash[:notice]
        
          = yield